### socket streams {{{ ###
upstream {PRODUCTION_APP_NAME} {
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response (in case the Unicorn master nukes a
        # single worker for timing out).

        server unix:{PRODUCTION_APP_PATH}/run/gunicorn.sock fail_timeout=0;
}
upstream {SANDBOX_APP_NAME} {
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response (in case the Unicorn master nukes a
        # single worker for timing out).

        server unix:{SANDBOX_APP_PATH}/run/gunicorn.sock fail_timeout=0;
}
### socket streams }}} ###

### server configuration ###
server {

        listen 80;
        # server_name domain_name;

        client_max_body_size 10M;

        # log files
        access_log {PRODUCTION_APP_PATH}/logs/nginx-access.log;
        error_log {PRODUCTION_APP_PATH}/logs/nginx-error.log debug;

        # static and media locations
        location /static/ {
                alias {PRODUCTION_APP_PATH}/data/static/;
                location ~* \.(css|js|gif|jpe?g|png)$ {
                        expires 168h; # 7 days (24h * 7d)
                        add_header Pragma public;
                        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
                }
        }

        location / {

                #passenger_enabled on;
                #allow my.public.ip.here;
                #deny all;

                # an HTTP header important enough to have its own Wikipedia entry:
                # http://en.wikipedia.org/wiki/X-Forwarded-For
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                # enable this if and only if you use HTTPS, this helps Rack
                # set the proper protocol for doing redirects:
                # proxy_set_header X-Forwarded-Proto https;

                # pass the Host: header from the client right along so redirects
                # can be set properly within the Rack application
                proxy_set_header Host $http_host;

                # we don't want nginx trying to do something clever with
                # redirects, we set the Host: header above already.
                proxy_redirect off;

                # set "proxy_buffering off" *only* for Rainbows! when doing
                # Comet/long-poll stuff. It's also safe to set if you're
                # using only serving fast clients with Unicorn + nginx.
                # Otherwise you _want_ nginx to buffer responses to slow
                # clients, really.
                # proxy_buffering off;

                # Try to serve static files from nginx, no point in making an
                # *application* server like Unicorn/Rainbows! serve static files.
                if (!-f $request_filename) {
                        proxy_pass http://{PRODUCTION_APP_NAME};
                        break;
                }
        }

        # robots.txt page
        location /robots.txt {
                root {PRODUCTION_APP_PATH}/data/static/;
                # index robots.txt;
        }

        # sitemap.xml page
        location /sitemap.xml {
                root {PRODUCTION_APP_PATH}/data/static/;
                # index robots.txt;
        }

        # HTTP caching
        #location ~* \.html$ {
                #expires -1;
        #}
}

server {

        listen 80;
        # server_name domain_name;

        client_max_body_size 10M;

        # log files
        access_log {SANDBOX_APP_PATH}/logs/nginx-access.log;
        error_log {SANDBOX_APP_PATH}/logs/nginx-error.log debug;

        # static and media locations
        location /static/ {
                alias {SANDBOX_APP_PATH}/data/static/;
                location ~* \.(css|js|gif|jpe?g|png)$ {
                        expires 168h; # 7 days (24h * 7d)
                        add_header Pragma public;
                        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
                }
        }

        location / {

                #passenger_enabled on;
                #allow my.public.ip.here;
                #deny all;

                # an HTTP header important enough to have its own Wikipedia entry:
                # http://en.wikipedia.org/wiki/X-Forwarded-For
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                # enable this if and only if you use HTTPS, this helps Rack
                # set the proper protocol for doing redirects:
                # proxy_set_header X-Forwarded-Proto https;

                # pass the Host: header from the client right along so redirects
                # can be set properly within the Rack application
                proxy_set_header Host $http_host;

                # we don't want nginx trying to do something clever with
                # redirects, we set the Host: header above already.
                proxy_redirect off;

                # set "proxy_buffering off" *only* for Rainbows! when doing
                # Comet/long-poll stuff. It's also safe to set if you're
                # using only serving fast clients with Unicorn + nginx.
                # Otherwise you _want_ nginx to buffer responses to slow
                # clients, really.
                # proxy_buffering off;

                # Try to serve static files from nginx, no point in making an
                # *application* server like Unicorn/Rainbows! serve static files.
                if (!-f $request_filename) {
                        proxy_pass http://{SANDBOX_APP_NAME};
                        break;
                }
        }

        location = /robots.txt {
                # return 404;
                alias {SANDBOX_APP_PATH}/data/static/robots.txt;
        }

        # HTTP caching
        #location ~* \.html$ {
                #expires -1;
        #}
}
